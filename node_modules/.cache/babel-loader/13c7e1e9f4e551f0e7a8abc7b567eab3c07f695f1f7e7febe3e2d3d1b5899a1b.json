{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gurde\\\\my-app\\\\src\\\\App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          console.log(event.target.value);\n          const searchString = event.target.value.toLocaleLowerCase();\n          const filteredMonsters = this.state.monsters.filter(monster => {\n            return monster.name.toLocaleLowerCase().includes(searchString);\n          });\n          this.setState(() => {\n            return {\n              monsters: filteredMonsters\n            };\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","logo","jsxDEV","_jsxDEV","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","console","log","render","className","children","type","placeholder","onChange","event","target","value","searchString","toLocaleLowerCase","filteredMonsters","filter","monster","name","includes","fileName","_jsxFileName","lineNumber","columnNumber","map","id"],"sources":["C:/Users/gurde/my-app/src/App.js"],"sourcesContent":["import { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => \n        this.setState(\n          () => {\n          return {monsters: users};\n          },\n          () => {\n            console.log(this.state);\n          },\n        )\n      );\n  }\n\n  render(){\n\n    return (\n      <div className=\"App\">\n      <input \n      className='search-box' \n      type='search' \n      placeholder='search monsters' \n      onChange={(event) => {\n        console.log(event.target.value);\n        const searchString = event.target.value.toLocaleLowerCase();\n        const filteredMonsters =this.state.monsters.filter((monster) => {\n          return monster.name.toLocaleLowerCase().includes(searchString);\n        });\n\n        this.setState(() => {\n          return{monsters: filteredMonsters}\n        })\n      }}>\n      </input>\n        {this.state.monsters.map((monster) => {\n          return(\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n          );\n        })}\n      </div>\n    );\n\n  }\n  \n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAE1BK,WAAWA,CAAA,EAAE;IACX,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAE;IACjBC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IACV,IAAI,CAACC,QAAQ,CACX,MAAM;MACN,OAAO;QAACP,QAAQ,EAAEM;MAAK,CAAC;IACxB,CAAC,EACD,MAAM;MACJE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAAC;IACzB,CACF,CACF,CAAC;EACL;EAEAW,MAAMA,CAAA,EAAE;IAEN,oBACEd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,gBACpBhB,OAAA;QACAe,SAAS,EAAC,YAAY;QACtBE,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ,EAAGC,KAAK,IAAK;UACnBR,OAAO,CAACC,GAAG,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UAC/B,MAAMC,YAAY,GAAGH,KAAK,CAACC,MAAM,CAACC,KAAK,CAACE,iBAAiB,CAAC,CAAC;UAC3D,MAAMC,gBAAgB,GAAE,IAAI,CAACtB,KAAK,CAACC,QAAQ,CAACsB,MAAM,CAAEC,OAAO,IAAK;YAC9D,OAAOA,OAAO,CAACC,IAAI,CAACJ,iBAAiB,CAAC,CAAC,CAACK,QAAQ,CAACN,YAAY,CAAC;UAChE,CAAC,CAAC;UAEF,IAAI,CAACZ,QAAQ,CAAC,MAAM;YAClB,OAAM;cAACP,QAAQ,EAAEqB;YAAgB,CAAC;UACpC,CAAC,CAAC;QACJ;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,EACL,IAAI,CAAC9B,KAAK,CAACC,QAAQ,CAAC8B,GAAG,CAAEP,OAAO,IAAK;QACpC,oBACE3B,OAAA;UAAAgB,QAAA,eACEhB,OAAA;YAAAgB,QAAA,EAAKW,OAAO,CAACC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GADfN,OAAO,CAACQ,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CAAC;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAGV;AAEF;AAEA,eAAehC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}